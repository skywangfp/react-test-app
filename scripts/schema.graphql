"""A Book"""
type Book {
  author: String!

  """comments"""
  comments(bookId: ID, pageSize: Int, pageNo: Int): [Comment!]

  """comments count"""
  commentsCount: Int!
  createdAt: String!
  id: ID!
  name: String!
  price: Float!
  updatedAt: String!
}

"""Comments"""
type Comment {
  book: Book!
  content: String!
  createdAt: String!
  id: ID!
  updatedAt: String!
  user: String!
}

type Mutation {
  book1: String!

  """Create a book by ID"""
  bookCreate(name: String!, author: String!, price: Float!): Book!

  """destroy book"""
  bookDestroy(id: ID!): String!

  """update book info"""
  bookUpdate(id: ID!, name: String, author: String, price: Float): Book!

  """create a comment"""
  commentCreate(bookId: ID!, user: String!, content: String!): Comment!

  """destroy comment"""
  commentDestroy(id: ID!): String!

  """An example field added by the generator"""
  testField: String!
}

type Query {
  """Find a book by ID"""
  book(id: ID!): Book

  """book list"""
  bookList: Book

  """search books"""
  books(name: String, author: String, priceStart: Int, priceEnd: Float, pageSize: Int, pageNo: Int, bookId: ID): [Book!]!

  """find user by id"""
  user(id: ID!): User!

  """show users"""
  users(first: Int): [User!]
}

"""A User"""
type User {
  birthday: String!
  createdAt: String!
  gender: String!
  id: ID!
  name: String!
  updatedAt: String!
}
